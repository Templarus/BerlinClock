/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package berlinclock;

import java.awt.Color;
import java.awt.Dimension;
import javax.swing.JPanel;

/**
 *
 * @author TemplaRus
 */
public class Block extends JPanel
{

    private boolean state;
    private double scalingfactor = 1.0;
    private int width;
    private int height;
    private int number;

    /**
     * Creates new form Block
     *
     * @param state Active state of block -> true - Active, false - Inactive
     * @param scalingfactor Scalingfactor , value ranged from 0.5 to 40.Default
     * value is 1.0
     * @param width Width of block (in manually set)
     * @param height Height of block (if manually set)
     * @param number Number of block on representation (used to colorize
     * exceptional blocks - for example each 15th minute)
     */
    public Block(boolean state, double scalingfactor, int width, int height, int number)
    {
        if ((width > 0 & width <= this.getMaximumSize().width) & (height > 0 & height <= this.getMaximumSize().height) & number >= -1 & scalingfactor >= 0.5 & scalingfactor <= 40.0)
        {
            this.width = width;
            this.height = height;
            this.number = number;
            this.scalingfactor = scalingfactor;
            setEnabled(true);
        } else
        {
            System.err.println("height/width or number are out of bonds:" + height + "," + width + "," + number);
            setEnabled(false);
            return;
        }

        this.state = state;
        initComponents();
        Colorizer();
        setBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK));
    }

    /**
     * Creates default object with default parameters (false, false, 40, 80, -1)
     */
    public Block()
    {
        this(false, 1.0, 40, 80, -1);
    }

    /**
     * Creates new form Block with default width and height
     *
     * @param state Active state of block -> true - Active, false - Inactive
     * @param scalingfactor Scalingfactor , value ranged from 0.5 to 40.Default
     * value is 1.0
     * @param number Number of block on representation (used to colorize
     * exceptional blocks - for example each 15th minute)
     */
    public Block(boolean state, double scalingfactor, int number)
    {
        this(state, scalingfactor, 40, 80, number);
    }

    /**
     * Creates new form Block with default width, height and number
     *
     * @param state Active state of block -> true - Active, false - Inactive
     * @param scalingfactor Scalingfactor , value ranged from 0.5 to 40.Default
     * value is 1.0
     */
    public Block(boolean state, double scalingfactor)
    {
        this(state, scalingfactor, 40, 80, -1);
    }

    private void Colorizer() //here we set color to this block
    {
        this.setBackground(new Color(240, 240, 240));
        if (number < 8 & state)
        {
            setBackground(Color.red);
        }
        if (number > 7 & state)
        {
            setBackground(Color.yellow);
        }
        if ((number == 10 |number == 13|number == 16) & state)
        {
            setBackground(Color.red);
        }
        

        setPreferredSize(new Dimension((int) (width / scalingfactor), (int) (height / scalingfactor)));
        setSize(getPreferredSize().width, getPreferredSize().height);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        setMaximumSize(new java.awt.Dimension(40, 80));
        setMinimumSize(new java.awt.Dimension(20, 40));
        setPreferredSize(new java.awt.Dimension(40, 80));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
